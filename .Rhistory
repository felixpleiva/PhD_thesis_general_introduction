start_lower = start_vals - 10,
start_upper = start_vals + 10,
lower = get_lower_lims(d$temp, d$rate, model_name = 'gaussian_1987'),
upper = get_upper_lims(d$temp, d$rate, model_name = 'gaussian_1987'),
supp_errors = 'Y',
convergence_count = FALSE)
# look at model fit
summary(mod)
# get predictions
preds <- data.frame(temp = seq(min(d$temp), max(d$temp), length.out = 100))
preds <- broom::augment(mod, newdata = preds)
# plot
ggplot(preds) +
geom_point(aes(temp, rate), d) +
geom_line(aes(temp, .fitted), col = 'blue') +
theme_bw()
gaussian_1987 <- function(temp, rmax, topt, a){
est <- rmax * exp(-0.5 * (abs(temp - topt)/a)^2)
return(est)
}
gaussian_1987
d <- subset(chlorella_tpc, curve_id == 1)
# get start values and fit model
start_vals <- get_start_vals(d$temp, d$rate, model_name = 'rezende_2019')
# fit model
mod <- nls.multstart::nls_multstart(rate~gaussian_1987(temp = temp,rmax, topt,a),
data = d,
iter = c(4,4,4),
start_lower = start_vals - 10,
start_upper = start_vals + 10,
lower = get_lower_lims(d$temp, d$rate, model_name = 'rezende_2019'),
upper = get_upper_lims(d$temp, d$rate, model_name = 'rezende_2019'),
supp_errors = 'Y',
convergence_count = FALSE)
# fit model
mod <- nls.multstart::nls_multstart(rate~rezende_2019(temp = temp,rmax, topt,a),
data = d,
iter = c(4,4,4),
start_lower = start_vals - 10,
start_upper = start_vals + 10,
lower = get_lower_lims(d$temp, d$rate, model_name = 'rezende_2019'),
upper = get_upper_lims(d$temp, d$rate, model_name = 'rezende_2019'),
supp_errors = 'Y',
convergence_count = FALSE)
# get start values and fit model
start_vals <- get_start_vals(d$temp, d$rate, model_name = 'rezende_2019')
# fit model
mod <- nls.multstart::nls_multstart(rate~rezende_2019(temp = temp,rmax, topt,a),
data = d,
iter = c(4,4,4),
start_lower = start_vals - 10,
start_upper = start_vals + 10,
lower = get_lower_lims(d$temp, d$rate, model_name = 'rezende_2019'),
upper = get_upper_lims(d$temp, d$rate, model_name = 'rezende_2019'),
supp_errors = 'Y',
convergence_count = FALSE)
# load in ggplot
library(ggplot2)
library(nls.multstart)
# install package from GitHub
remotes::install_github("padpadpadpad/rTPC")
# subset for the first TPC curve
data('chlorella_tpc')
d <- subset(chlorella_tpc, curve_id == 1)
# get start values and fit model
start_vals <- get_start_vals(d$temp, d$rate, model_name = 'rezende_2019')
mod <- nls.multstart::nls_multstart(rate~rezende_2019(temp = temp,rmax, topt,a),
data = d,
iter = c(4,4,4),
start_lower = start_vals - 10,
start_upper = start_vals + 10,
lower = get_lower_lims(d$temp, d$rate, model_name = 'rezende_2019'),
upper = get_upper_lims(d$temp, d$rate, model_name = 'rezende_2019'),
supp_errors = 'Y',
convergence_count = FALSE)
# get start values and fit model
start_vals <- get_start_vals(d$temp, d$rate, model_name = 'rezende_2019')
start_vals
# get start values and fit model
start_vals <- get_start_vals(d$temp, d$rate, model_name = 'gaussian_1947')
??model_name
# get start values and fit model
start_vals <- get_start_vals(d$temp, d$rate, model_name = 'gaussian_1987')
start_vals
# get start values and fit model
start_vals <- get_start_vals(d$temp, d$rate, model_name = 'rezende_2019')
start_vals
# fit model
mod <- nls.multstart::nls_multstart(rate~rezende_2019(temp = temp,q10,a,b,c),
data = d,
iter = c(4,4,4),
start_lower = start_vals - 10,
start_upper = start_vals + 10,
lower = get_lower_lims(d$temp, d$rate, model_name = 'rezende_2019'),
upper = get_upper_lims(d$temp, d$rate, model_name = 'rezende_2019'),
supp_errors = 'Y',
convergence_count = FALSE)
# get start values and fit model
start_vals <- get_start_vals(d$temp, d$rate, model_name = 'rezende_2019')
start_vals
mod <- nls.multstart::nls_multstart(rate~rezende_2019(temp = temp,q10,a,b,c),
data = d,
iter = c(4,4,4),
start_lower = start_vals - 10,
start_upper = start_vals + 10,
lower = get_lower_lims(d$temp, d$rate, model_name = 'rezende_2019'),
upper = get_upper_lims(d$temp, d$rate, model_name = 'rezende_2019'),
supp_errors = 'Y',
convergence_count = FALSE)
start_vals <- get_start_vals(d$temp, d$rate, model_name = 'gaussian_1947')
# subset for the first TPC curve
data('chlorella_tpc')
d <- subset(chlorella_tpc, curve_id == 1)
# get start values and fit model
start_vals <- get_start_vals(d$temp, d$rate, model_name = 'rezende_2019')
start_vals
mod <- nls.multstart::nls_multstart(rate~rezende_2019(temp = temp,q10,a,b,c),
data = d,
iter = c(4,4,4),
start_lower = start_vals - 10,
start_upper = start_vals + 10,
lower = get_lower_lims(d$temp, d$rate, model_name = 'rezende_2019'),
upper = get_upper_lims(d$temp, d$rate, model_name = 'rezende_2019'),
supp_errors = 'Y',
convergence_count = FALSE)
# look at model fit
summary(mod)
# fit model
mod <- nls.multstart::nls_multstart(rate~rezende_2019(temp = temp,q10,a,b,c),
data = d,
iter = c(4,4,4,4),
start_lower = start_vals - 10,
start_upper = start_vals + 10,
lower = get_lower_lims(d$temp, d$rate, model_name = 'rezende_2019'),
upper = get_upper_lims(d$temp, d$rate, model_name = 'rezende_2019'),
supp_errors = 'Y',
convergence_count = FALSE)
# look at model fit
summary(mod)
# get predictions
preds <- data.frame(temp = seq(min(d$temp), max(d$temp), length.out = 100))
preds <- broom::augment(mod, newdata = preds)
# plot
ggplot(preds) +
geom_point(aes(temp, rate), d) +
geom_line(aes(temp, .fitted), col = 'blue') +
theme_bw()
View(chlorella_tpc)
preds
preds
preds <- data.frame(temp = seq(min(d$temp), max(d$temp), length.out = 100))
preds <- broom::augment(mod, newdata = preds)
preds
View(preds)
setwd("C:/Users/Invunche/Dropbox/GitHub/PhD thesis_general_introduction")
# load in ggplot
library(ggplot2)
library(nls.multstart)
# load in ggplot
library(ggplot2)
library(nls.multstart)
# install package from GitHub
#remotes::install_github("padpadpadpad/rTPC")
library(rTPC)
# subset for the first TPC curve
dat<-read.csv("mesas_etal_data.csv")
#data('chlorella_tpc')
d <- subset(dat, selection == "control")
#data('chlorella_tpc')
d <- subset(dat, dat$selection == "control")
View(d)
# get start values and fit model
start_vals <- get_start_vals(d$temperature, d$climbing_speed, model_name = 'rezende_2019')
start_vals
# fit model
mod <- nls.multstart::nls_multstart(rate~rezende_2019(temp = temperature,q10,a,b,c),
data = d,
iter = c(4,4,4,4),
start_lower = start_vals - 10,
start_upper = start_vals + 10,
lower = get_lower_lims(d$temp, d$climbing_speed, model_name = 'rezende_2019'),
upper = get_upper_lims(d$temp, d$climbing_speed, model_name = 'rezende_2019'),
supp_errors = 'Y',
convergence_count = FALSE)
# fit model
mod <- nls.multstart::nls_multstart(rate~rezende_2019(temperature = temp,q10,a,b,c),
data = d,
iter = c(4,4,4,4),
start_lower = start_vals - 10,
start_upper = start_vals + 10,
lower = get_lower_lims(d$temp, d$climbing_speed, model_name = 'rezende_2019'),
upper = get_upper_lims(d$temp, d$climbing_speed, model_name = 'rezende_2019'),
supp_errors = 'Y',
convergence_count = FALSE)
# Fitting thermal performance curves
setwd("C:/Users/Invunche/Dropbox/GitHub/PhD thesis_general_introduction")
# load in ggplot
library(ggplot2)
library(nls.multstart)
# install package from GitHub
#remotes::install_github("padpadpadpad/rTPC")
library(rTPC)# subset for the first TPC curve
#-----------------------------------------------------------------------------
#read data from:
#Mesas, Andres; Jaramillo, Angélica;Castañeda, Luis (2021), Experimental evolution on heat tolerance and thermal
#performance curves under contrasting thermal selection in Drosophila
#subobscura, Dryad, Dataset, https://doi.org/10.5061/dryad.f4qrfj6vm
#
dat<-read.csv("mesas_etal_data.csv")
d <- subset(dat, dat$selection == "control")
names(d)
#change names
dplyr::rename(d,climbung_speed==rate)
#change names
dplyr::rename(d,climbing_speed==rate)
#change names
dplyr::rename(d,"climbing_speed"=="rate")
#change names
dplyr::rename(d,"climbing_speed"="rate")
#change names
dplyr::rename(d,"rate"="rate2")
#change names
dplyr::rename(d,"rate"="cimbling_rate")
#change names
dplyr::rename(d,"rate"="climbling_rate")
#change names
dplyr::rename(d,"rate"="climbing_rate")
#change names
dplyr::rename(d,"rate"="climbing_speed")
dplyr::rename(d,"temp"="temperature")
dplyr::rename(d,"temp"="temperature")
# get start values and fit model
start_vals <- get_start_vals(d$temp, d$rate, model_name = 'rezende_2019')
# Fitting thermal performance curves
setwd("C:/Users/Invunche/Dropbox/GitHub/PhD thesis_general_introduction")
# load in ggplot
library(ggplot2)
library(nls.multstart)
# install package from GitHub
#remotes::install_github("padpadpadpad/rTPC")
library(rTPC)# subset for the first TPC curve
#-----------------------------------------------------------------------------
#read data from:
#Mesas, Andres; Jaramillo, Angélica;Castañeda, Luis (2021), Experimental evolution on heat tolerance and thermal
#performance curves under contrasting thermal selection in Drosophila
#subobscura, Dryad, Dataset, https://doi.org/10.5061/dryad.f4qrfj6vm
#
dat<-read.csv("mesas_etal_data.csv")
d <- subset(dat, dat$selection == "control")
names(d)
#change names
dplyr::rename(d,"rate"="climbing_speed")
dplyr::rename(d,"temp"="temperature")
start_vals <- get_start_vals(d$temp, d$rate, model_name = 'rezende_2019')
#change names
d<-dplyr::rename(d,"rate"="climbing_speed")
d<-dplyr::rename(d,"temp"="temperature")
# get start values and fit model
start_vals <- get_start_vals(d$temp, d$rate, model_name = 'rezende_2019')
# get start values and fit model
start_vals <- get_start_vals(d$temp, d$rate, model_name = 'rezende_2019')
start_vals
mod <- nls.multstart::nls_multstart(rate~rezende_2019(temp = temp,q10,a,b,c),
data = d,
iter = c(4,4,4,4),
start_lower = start_vals - 10,
start_upper = start_vals + 10,
lower = get_lower_lims(d$temp, d$climbing_speed, model_name = 'rezende_2019'),
upper = get_upper_lims(d$temp, d$climbing_speed, model_name = 'rezende_2019'),
supp_errors = 'Y',
convergence_count = FALSE)
start_vals
# fit model
mod <- nls.multstart::nls_multstart(rate~rezende_2019(temp = temp,q10,a,b,c),
data = d,
iter = c(4,4,4,4),
start_lower = start_vals - 10,
start_upper = start_vals + 10,
lower = get_lower_lims(d$temp, d$rate, model_name = 'rezende_2019'),
upper = get_upper_lims(d$temp, d$rate, model_name = 'rezende_2019'),
supp_errors = 'Y',
convergence_count = FALSE)
# look at model fit
summary(mod)
# get predictions
preds <- data.frame(temp = seq(min(d$temp), max(d$temp), length.out = 100))
preds <- broom::augment(mod, newdata = preds)
# plot
ggplot(preds) +
geom_point(aes(temp, rate), d) +
geom_line(aes(temp, .fitted), col = 'blue') +
theme_bw()
# get predictions
preds <- data.frame(temp = seq(-20, max(d$temp), length.out = 100))
preds <- broom::augment(mod, newdata = preds)
# plot
ggplot(preds) +
geom_point(aes(temp, rate), d) +
geom_line(aes(temp, .fitted), col = 'blue') +
theme_bw()
# get start values and fit model
start_vals <- get_start_vals(d$temp, d$rate, model_name = 'weibull_1995')
start_vals
# fit model
mod <- nls.multstart::nls_multstart(rate~weibull_1995(temp = temp,topt,b,c),
data = d,
iter = c(4,4,4,4),
start_lower = start_vals - 10,
start_upper = start_vals + 10,
lower = get_lower_lims(d$temp, d$rate, model_name = 'weibull_1995'),
upper = get_upper_lims(d$temp, d$rate, model_name = 'weibull_1995'),
supp_errors = 'Y',
convergence_count = FALSE)
# fit model
mod <- nls.multstart::nls_multstart(rate~weibull_1995(temp = temp,topt,b,c),
data = d,
iter = c(3,3,3,3),
start_lower = start_vals - 10,
start_upper = start_vals + 10,
lower = get_lower_lims(d$temp, d$rate, model_name = 'weibull_1995'),
upper = get_upper_lims(d$temp, d$rate, model_name = 'weibull_1995'),
supp_errors = 'Y',
convergence_count = FALSE)
mod <- nls.multstart::nls_multstart(rate~weibull_1995(temp = temp,topt,b,c),
data = d,
iter = c(4,4,4),
start_lower = start_vals - 10,
start_upper = start_vals + 10,
lower = get_lower_lims(d$temp, d$rate, model_name = 'weibull_1995'),
upper = get_upper_lims(d$temp, d$rate, model_name = 'weibull_1995'),
supp_errors = 'Y',
convergence_count = FALSE)
# fit model
mod <- nls.multstart::nls_multstart(rate~weibull_1995(temp = temp,topt,b,c),
data = d,
iter = c(3,3,3,3),
start_lower = start_vals - 10,
start_upper = start_vals + 10,
lower = get_lower_lims(d$temp, d$rate, model_name = 'weibull_1995'),
upper = get_upper_lims(d$temp, d$rate, model_name = 'weibull_1995'),
supp_errors = 'Y',
convergence_count = FALSE)
start_vals
# fit model
mod <- nls.multstart::nls_multstart(rate~weibull_1995(temp = temp,a,topt,b,c),
data = d,
iter = c(4,4,4,4),
start_lower = start_vals - 10,
start_upper = start_vals + 10,
lower = get_lower_lims(d$temp, d$rate, model_name = 'weibull_1995'),
upper = get_upper_lims(d$temp, d$rate, model_name = 'weibull_1995'),
supp_errors = 'Y',
convergence_count = FALSE)
# look at model fit
summary(mod)
# get predictions
preds <- data.frame(temp = seq(-20, max(d$temp), length.out = 100))
preds <- broom::augment(mod, newdata = preds)
# plot
ggplot(preds) +
geom_point(aes(temp, rate), d) +
geom_line(aes(temp, .fitted), col = 'blue') +
theme_bw()
# get start values and fit model
start_vals <- get_start_vals(d$temp, d$rate, model_name = 'gaussian_1987')
start_vals
# fit model
mod <- nls.multstart::nls_multstart(rate~gaussian_1987(temp = temp,rmax,topt,a),
data = d,
iter = c(4,4,4),
start_lower = start_vals - 10,
start_upper = start_vals + 10,
lower = get_lower_lims(d$temp, d$rate, model_name = 'gaussian_1987'),
upper = get_upper_lims(d$temp, d$rate, model_name = 'gaussian_1987'),
supp_errors = 'Y',
convergence_count = FALSE)
# look at model fit
summary(mod)
# get predictions
preds <- data.frame(temp = seq(-20, max(d$temp), length.out = 100))
preds <- broom::augment(mod, newdata = preds)
# plot
ggplot(preds) +
geom_point(aes(temp, rate), d) +
geom_line(aes(temp, .fitted), col = 'blue') +
theme_bw()
start_vals <- get_start_vals(d$temp, d$rate, model_name = 'rezende_2019')
start_vals
# get start values and fit model
start_vals <- get_start_vals(d$temp, d$rate, model_name = 'rezende_2019')
start_vals
# fit model
mod <- nls.multstart::nls_multstart(rate~rezende_2019(temp = temp,q10,a,b,c),
data = d,
iter = c(4,4,4,4),
start_lower = start_vals - 10,
start_upper = start_vals + 10,
lower = get_lower_lims(d$temp, d$rate, model_name = 'rezende_2019'),
upper = get_upper_lims(d$temp, d$rate, model_name = 'rezende_2019'),
supp_errors = 'Y',
convergence_count = FALSE)
# look at model fit
summary(mod)
# get predictions
preds <- data.frame(temp = seq(-20, max(d$temp), length.out = 100))
preds <- broom::augment(mod, newdata = preds)
# get predictions
preds <- data.frame(temp = seq(min(d$temp), max(d$temp), length.out = 100))
preds <- broom::augment(mod, newdata = preds)
# plot
ggplot(preds) +
geom_point(aes(temp, rate), d) +
geom_line(aes(temp, .fitted), col = 'blue') +
theme_bw()
View(d)
d <-aggregate(dat,cbind(rate,temp)~replicated_line,mean)
d <-aggregate(dat,cbind(c(rate,temp))~replicated_line,mean)
d <-aggregate(dat,rate,~replicated_line,mean)
d <- aggregate(rate~temp,mean)
d <- aggregate(rate~temp,d,mean)
#change names
d<-dplyr::rename(d,"rate"="climbing_speed")
d<-dplyr::rename(d,"temp"="temperature")
# Fitting thermal performance curves
setwd("C:/Users/Invunche/Dropbox/GitHub/PhD thesis_general_introduction")
# load in ggplot
library(ggplot2)
library(nls.multstart)
# install package from GitHub
#remotes::install_github("padpadpadpad/rTPC")
library(rTPC)# subset for the first TPC curve
#-----------------------------------------------------------------------------
#read data from:
#Mesas, Andres; Jaramillo, Angélica;Castañeda, Luis (2021), Experimental evolution on heat tolerance and thermal
#performance curves under contrasting thermal selection in Drosophila
#subobscura, Dryad, Dataset, https://doi.org/10.5061/dryad.f4qrfj6vm
#
dat<-read.csv("mesas_etal_data.csv")
d <- subset(dat, dat$selection == "control")
names(d)
#change names
d<-dplyr::rename(d,"rate"="climbing_speed")
d<-dplyr::rename(d,"temp"="temperature")
d <- aggregate(rate~temp,d,mean)
# get start values and fit model
start_vals <- get_start_vals(d$temp, d$rate, model_name = 'rezende_2019')
start_vals
# fit model
mod <- nls.multstart::nls_multstart(rate~rezende_2019(temp = temp,q10,a,b,c),
data = d,
iter = c(4,4,4,4),
start_lower = start_vals - 10,
start_upper = start_vals + 10,
lower = get_lower_lims(d$temp, d$rate, model_name = 'rezende_2019'),
upper = get_upper_lims(d$temp, d$rate, model_name = 'rezende_2019'),
supp_errors = 'Y',
convergence_count = FALSE)
# look at model fit
summary(mod)
# get predictions
preds <- data.frame(temp = seq(min(d$temp), max(d$temp), length.out = 100))
preds <- broom::augment(mod, newdata = preds)
ggplot(preds) +
geom_point(aes(temp, rate), d) +
geom_line(aes(temp, .fitted), col = 'blue') +
theme_bw()
# get predictions
preds <- data.frame(temp = seq(0, max(d$temp), length.out = 100))
preds <- broom::augment(mod, newdata = preds)
ggplot(preds) +
geom_point(aes(temp, rate), d) +
geom_line(aes(temp, .fitted), col = 'blue') +
theme_bw()
# get predictions
preds <- data.frame(temp = seq(-10, max(d$temp), length.out = 100))
preds <- broom::augment(mod, newdata = preds)
ggplot(preds) +
geom_point(aes(temp, rate), d) +
geom_line(aes(temp, .fitted), col = 'blue') +
theme_bw()
# get predictions
preds <- data.frame(temp = seq(-15, max(d$temp), length.out = 100))
preds <- broom::augment(mod, newdata = preds)
ggplot(preds) +
geom_point(aes(temp, rate), d) +
geom_line(aes(temp, .fitted), col = 'blue') +
theme_bw()
# get predictions
preds <- data.frame(temp = seq(-20, max(d$temp), length.out = 100))
preds <- broom::augment(mod, newdata = preds)
ggplot(preds) +
geom_point(aes(temp, rate), d) +
geom_line(aes(temp, .fitted), col = 'blue') +
theme_bw()
# plot
Figure 1.1A=
ggplot(preds) +
geom_point(aes(temp, rate), d) +
geom_line(aes(temp, .fitted), col = 'blue') +
theme_bw()
#Store Plots
ggsave('Figure 1.1A Thermal performacen curve fitted with data of Mesias et al 2021.pdf',Figure_1.1A,width=12,height=15)
# plot
Figure_1.1A=
ggplot(preds) +
geom_point(aes(temp, rate), d) +
geom_line(aes(temp, .fitted), col = 'blue') +
theme_bw()
#Store Plots
ggsave('Figure 1.1A Thermal performacen curve fitted with data of Mesias et al 2021.pdf',Figure_1.1A,width=12,height=15)
#Store Plots
ggsave('Figure 1.1A Thermal performacen curve fitted with data of Mesias et al 2021.pdf',Figure_1.1A,width=5,height=5)
